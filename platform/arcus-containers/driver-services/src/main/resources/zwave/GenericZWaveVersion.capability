/*
 * Copyright 2019 Arcus Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import groovy.transform.Field

description		"Default ZWave implementation for the versions attribute of the DeviceAdvanced capability"
version			"1.0"
capability       "DeviceAdvanced"

onConnected {
		// get the version
		ZWave.version.get()
}

onZWaveMessage.version.report {
	log.debug "Recieved version message: {} ", message.command
	String versionstr = getVersionUnsigned(message, 'protocol', "null" )+'.'+getVersionUnsigned(message, 'sub-protocol', "null" )+'.'+getVersionUnsigned(message, 'firmware_0_version', "null" )+'.'+getVersionUnsigned(message, 'firmware_0_sub_version', "null" )
	log.trace "Reported version: {}", versionstr
	DeviceAdvanced.firmwareVersion  versionstr 
	return true;
}

static String getVersionUnsigned(message, name, dflt) {
    Integer field = message.command.get(name)
    return (field != null) ? field & 0xFF : dflt
}

