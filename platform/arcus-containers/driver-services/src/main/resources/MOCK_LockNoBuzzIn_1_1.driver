/*
 * Copyright 2019 Arcus Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import groovy.transform.Field

/**
 * Mock driver for a Door Lock without Buzz-In
 *
 */
driver			"MOCK_LockNoBuzzin"
description		"Driver for the Mock Door Lock, No Buzz-In"
version			"1.1"
protocol			"MOCK"
deviceTypeHint	"Lock"
productId		"9936b0"
vendor 			"Mockitron"
model 			"Mock Door Lock, No Buzz-In"

matcher        'MOCK:Capability' : 'LockNoBuzzin'
matcher        'MOCK:ProductId'  : '9936b0'

capabilities	'DevicePower', 'DoorLock', 'DeviceMock'

importCapability 'mock/MOCK_DoorLock'

  
@Field final int MAX_SUPPORTED_PINS	= 30

DeviceConnection.signal            91
DoorLock.type                      DoorLock.TYPE_DEADBOLT
DoorLock.supportsBuzzIn            false
DoorLock.numPinsSupported          MAX_SUPPORTED_PINS
DoorLock.supportsInvalidPin        true
DevicePower.source                 DevicePower.SOURCE_BATTERY
DevicePower.linecapable            false
DevicePower.battery                57
DevicePower.backupbatterycapable   false

// ########### driver lifecycle callbacks ##################

onAdded {
	log.debug "Mock LockNoBuzzin started."
	Device.name 'Mock Door Lock, No Buzz-In'
	
	// set inital attribute values
	DevicePower.sourcechanged           ((null != DeviceAdvanced.added.get()) ? DeviceAdvanced.added.get() : new Date())
}

onConnected {
	log.debug "Mock LockNoBuzzin connected."
}

onDisconnected {
	log.debug "Mock LockNoBuzzin disconnected."
}

onRemoved {
	log.debug "Mock LockNoBuzzin removed."
}


// ########### capability support ##################


// ########### mock stuff here #####################

onPlatform ("devmock:Connect") {
  log.debug "devmock:Connect"
  connected();
  sendResponse "devmock:ConnectResponse", [:]
}

onPlatform ("devmock:Disconnect") {
  log.debug "devmock:Disconnect"
  disconnected();
  sendResponse "devmock:ConnectResponse", [:]
}

onPlatform ("devmock:SetAttributes") {
  log.debug "devmock:SetAttributes:" + message.attributes.attrs
  attributes << message.attributes.attrs;
  sendResponse "devmock:SetAttributesResponse", [:]
}

