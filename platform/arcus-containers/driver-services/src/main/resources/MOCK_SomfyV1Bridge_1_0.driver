/*
 * Copyright 2019 Arcus Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Mock driver for a Somfy V1 Z-Wave Bridge (ZRTSI)
 * 
 * Notes: 
 * - Somfy devices pair via a bridge (the Somfy ZRTSI) and look the same to the system whether they are
 *   a Shade or a Blind.
 *   
 * 
 */
driver			"MOCK_SomfyV1Bridge"
description		"Mock driver for a Somfy V1 Z-Wave Bridge (ZRTSI)"
version			"1.0"
protocol		"MOCK"
deviceTypeHint	"Bridge"
productId		"b726df"				
vendor 			"Mockitron"
model 			"Somfy"

matcher         'MOCK:Capability' : 'SomfyV1Bridge'
matcher        'MOCK:ProductId'  : 'b726df'

capabilities	'DevicePower'



// ########### driver lifecycle callbacks ##################

onAdded {
	log.debug "Mock Somfy V1 Bridge (ZRTSI) device added."
	Device.name 'Mock Somfy V1 Bridge (ZRTSI)'

	DevicePower.source               DevicePower.SOURCE_LINE
	DevicePower.linecapable          true
	DevicePower.backupbatterycapable false
	DevicePower.sourcechanged        ((null != DeviceAdvanced.added.get()) ? DeviceAdvanced.added.get() : new Date())
}


onConnected {
	log.debug "Mock Somfy V1 Bridge (ZRTSI) device connected."
}

onDisconnected {
	log.debug "Mock Somfy V1 Bridge (ZRTSI) device disconnected."
}

onRemoved {
	log.debug "Mock Somfy V1 Bridge (ZRTSI) device removed."
}


// ########### mock stuff here #####################

onPlatform ("devmock:Connect") {
  log.debug "devmock:Connect"
  connected();
  sendResponse "devmock:ConnectResponse", [:]
}


onPlatform ("devmock:Disconnect") {
  log.debug "devmock:Disconnect"
  disconnected();
  sendResponse "devmock:ConnectResponse", [:]
}

onPlatform ("devmock:SetAttributes") {
  log.debug "devmock:SetAttributes:" + message.attributes.attrs
  attributes << message.attributes.attrs;
  sendResponse "devmock:SetAttributesResponse", [:]
}

