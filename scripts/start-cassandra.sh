#!/bin/bash
set -euo pipefail

SCRIPT_PATH="$0"
SCRIPT_DIR=$(dirname ${SCRIPT_PATH})
. "${SCRIPT_DIR}/../khakis/bin/common.sh"

CASSANDRA_IMAGE=${CASSANDRA_IMAGE:-"eyeris/cassandra"}

CASSANDRA_CPUSHARES=${CASSANDRA_CPUSHARES:-4}
CASSANDRA_MEMORY=${CASSANDRA_MEMORY:-768m}

# Container configuration
EYERIS_PLATFORM_DIRECT_PORTS=${EYERIS_PLATFORM_DIRECT_PORTS:-1}
EYERIS_PLATFORM_PORTS=${EYERIS_PLATFORM_PORTS:--P}
EYERIS_DEVELOPER_MODE=${EYERIS_DEVELOPER_MODE:-true}

CASSANDRA_CMD="--name=eyeris-cassandra --cpu-shares=$CASSANDRA_CPUSHARES --memory=$CASSANDRA_MEMORY -e CASSANDRA_REPLICATION=1 -e CASSANDRA_HEAPSIZE=512 $CASSANDRA_IMAGE"

if [ -n "${EYERIS_PLATFORM_DIRECT_PORTS}" ] && [ "${EYERIS_PLATFORM_PORTS}" == "-P" ]; then
#    ZOOKEEPER_CMD="-P -p 2181:2181 -p 2888:2888 -p 3888:3888 $ZOOKEEPER_CMD"
#    KAFKA_CMD="-P -p 9092:9092 $KAFKA_CMD"
    CASSANDRA_CMD="-P -p 7000:7000 -p 7001:7001 -p 7199:7199 -p 9042:9042 -p 9160:9160 $CASSANDRA_CMD"
fi

if [ "${EYERIS_DEVELOPER_MODE}" == "true" ]; then
    CASSANDRA_CMD="-e CASSANDRA_SINGLE_NODE=true $CASSANDRA_CMD"
fi

CASSANDRA_CMD="--mount source=cassandra-data,target=/data $CASSANDRA_CMD"
docker_run -d $CASSANDRA_CMD

docker_exec "eyeris-cassandra" cassandra-cmd setup &

